system:
  docker:
    server:
      port: ${CONTAINER_GATEWAY_PORT}
    eureka:
      hostname: ${CONTAINER_EUREKA_NAME}
      port: ${CONTAINER_EUREKA_PORT}
  default:
    server:
      port: 8081
    eureka:
      hostname: localhost
      port: 8761
    routes:
      catalog-service: CATALOG-SERVICE
      authentication-service: AUTHENTICATION-SERVICE
      oauth-service: OAUTH-SERVICE

---
spring:
  profiles: default
  aop:
    proxyTargetClass: true
  application:
     name: Gateway-Service

server:
  port: ${PORT:${system.default.server.port}}

eureka:
  client:
    serviceUrl:
      defaultZone: http://${system.default.eureka.hostname}:${system.default.eureka.port}/eureka/
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 5

ribbon:
  readTimeout: 10000
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 10000

zuul:
  prefix: /api
  add-proxy-headers: true
  routes:
    catalog-service:
      sensitiveHeaders: true
      path: /catalog/**
      serviceId: ${system.default.routes.catalog-service}
      stripPrefix: true
    registration-service:
      sensitiveHeaders: true
      path: /auth/registration/**
      serviceId: ${system.default.routes.authentication-service}
      stripPrefix: true
    oauth-service:
      sensitiveHeaders: true
      path: /uaa/**
      serviceId: ${system.default.routes.oauth-service}
      stripPrefix: true

security:
  # Disable Spring Boot basic authentication
  basic:
    enabled: false
  oauth2:
    sso:
      loginPath: /login
    client:
      accessTokenUri: http://localhost:${server.port}/uaa/oauth/token
      userAuthorizationUri: /uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource

---
spring:
  profiles: docker-container
  aop:
    proxyTargetClass: true
  application:
    name: Gateway-Service

server:
  port: ${PORT:${system.docker.server.port}}

eureka:
  client:
    serviceUrl:
      defaultZone: http://${system.docker.eureka.hostname}:${system.docker.eureka.port}/eureka/
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 5

ribbon:
  readTimeout: 10000
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 10000

zuul:
  prefix: /api
  routes:
    catalog-service:
      sensitiveHeaders: true
      path: /catalog/**
      serviceId: ${system.default.routes.catalog-service}
      stripPrefix: true
    registration-service:
      sensitiveHeaders: true
      path: /auth/registration/**
      serviceId: ${system.default.routes.authentication-service}
      stripPrefix: true
    oauth-service:
      sensitiveHeaders: true
      path: /uaa/**
      serviceId: ${system.default.routes.oauth-service}
      stripPrefix: true
  add-proxy-headers: true

security:
  # Disable Spring Boot basic authentication
  basic:
    enabled: false
  oauth2:
    sso:
      loginPath: /login
    client:
      accessTokenUri: http://localhost:${server.port}/uaa/oauth/token
      userAuthorizationUri: /uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource